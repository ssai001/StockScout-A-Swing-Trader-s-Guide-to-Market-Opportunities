# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# trigger:
# - Finviz_Web_Scraping

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    # Python27:
    #   python.version: '2.7'
    # Python35:
    #   python.version: '3.5'
    # Python36:
    #   python.version: '3.6'
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- bash: |
    echo $DB_USER
    echo $DB_PWD
    echo $DB_HOST
    echo $DB_PORT
    echo $DB_NAME
    echo $email_sender_account
    echo $email_sender_username
    echo $email_sender_password
    echo $email_smtp_server
    echo $email_smtp_port
    echo $email_recepients
  env:
    DB_USER: $(DB_USER_DEVAZURE)
    DB_PWD: $(DB_PWD_DEVAZURE)
    DB_HOST: $(DB_HOST_DEVAZURE)
    DB_PORT: $(DB_PORT_DEVAZURE)
    DB_NAME: $(DB_NAME_DEVAZURE)
    email_sender_account: $(EMAIL_SENDER_ACCOUNT_DEVAZURE)
    email_sender_username: $(EMAIL_SENDER_USERNAME_DEVAZURE)
    email_sender_password: $(EMAIL_SENDER_PASSWORD_DEVAZURE)
    email_smtp_server: $(EMAIL_SMTP_SERVER_DEVAZURE)
    email_smtp_port: $(EMAIL_SMTP_PORT_DEVAZURE)
    email_recepients: $(EMAIL_RECEPIENTS_DEVAZURE)

- script: |
    python Finviz_Web_Scraping.py
  displayName: 'Run Finviz_Web_Scraping.py script'
