# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'
 
- bash: |
    echo "Using secret variable: $(DB_USER_DEVAZURE)"
    echo "Using secret variable: $(DB_PWD_DEVAZURE)"
    echo "Using secret variable: $(DB_HOST_DEVAZURE)"
    echo "Using secret variable: $(DB_PORT_DEVAZURE)"
    echo "Using secret variable: $(DB_NAME_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_SENDER_ACCOUNT_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_SENDER_USERNAME_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_SENDER_PASSWORD_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_SMTP_SERVER_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_SMTP_PORT_DEVAZURE)"
    echo "Using secret variable: $(EMAIL_RECEPIENTS_DEVAZURE)"

- task: Pythonscript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: './Finviz_Web_Scraping.py'
  env:
    DB_USER: $(DB_USER_DEVAZURE)
    DB_PWD: $(DB_PWD_DEVAZURE)
    DB_HOST: $(DB_HOST_DEVAZURE)
    DB_PORT: $(DB_PORT_DEVAZURE)
    DB_NAME: $(DB_NAME_DEVAZURE)
    email_sender_account: $(EMAIL_SENDER_ACCOUNT_DEVAZURE)
    email_sender_username: $(EMAIL_SENDER_USERNAME_DEVAZURE)
    email_sender_password: $(EMAIL_SENDER_PASSWORD_DEVAZURE)
    email_smtp_server: $(EMAIL_SMTP_SERVER_DEVAZURE)
    email_smtp_port: $(EMAIL_SMTP_PORT_DEVAZURE)
    email_recepients: $(EMAIL_RECEPIENTS_DEVAZURE)